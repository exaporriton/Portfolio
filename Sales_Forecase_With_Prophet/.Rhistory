library("ggalluvial")
library("plotrix")
library("emmeans")
library ("car")
library ("carData")
library("ggplot2")
library("lubridate")
library("skimr")
library("psych")
library("Hmisc")
library("corrplot")
library("naniar")
library("GGally")
library("rmarkdown")
library("dplyr")
library ("tidyr")
library("readxl")
library("broom") # tidying and augmenting model output
library ("car")
library ("carData")
library("emmeans")
library("readr")
library("caTools")
library("lmtest")
library("ResourceSelection")
library("sandwich")
library("tidyverse")
library("jtools") # summarizing regression output, effect_plot
library("margins") # marginal effects
library("ggfortify") # auto_plot function
library("slider")
library("skimr")
# Load the PROPHET Package
```{r}
library("prophet")
```
library("prophet")
library(readxl)
master_data_karl_com <- read_excel("master_data_karl.com.xls",
col_types = c("text", "text", "date",
"numeric", "numeric", "numeric"))
View(master_data_karl_com)
library(readxl)
sales_df <- read_excel("master_data_karl.com.xls",
col_types = c("text", "text", "date",
"text", "numeric", "numeric"))
View(sales_df)
library(readxl)
sales_df <- read_excel("master_data_karl.com.xls",
col_types = c("text", "text", "date",
"text", "numeric", "numeric"))
View(sales_df)
qplot(Date,Sales, data = sales_df)
library(readxl)
sales_df <- read_excel("master_data_karl.com.xls",
col_types = c("text", "text", "date",
"text", "numeric", "numeric"))
View(sales_df)
qplot(Date,Sales, data = sales_df)
ds <- data$Date
ds <- sales_df$Date
y <- data$Sales
df <- data.frame(ds,y)
ds <- sales_df$Date
y <- sales_df$Sales
df <- data.frame(ds,y)
m <- prophet(daily.seasonality="auto")
m <- fit.prophet(m,df)
?prophet
future <- make_future_dataframe(m, periods = 104)
forecast <- predict (m, future)
plot(m, forecast)
dyplot.prophet(m, forecast)
plot(m, forecast)
dyplot.prophet(m, forecast)
prophet_plot_components(m, forecast)
pred <- forecast$yhat[1:1981]
actual_traffic <- df[,2]
plot(actual_traffic, pred )
abline(lm(pred~actual_traffic))
#summary(pred~actual_traffic) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_traffic) # <- we are looking at the Adjusted R^2 and the Median.
summary(model1)
#summary(pred~actual_traffic) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_traffic) # <- we are looking at the Adjusted R^2 and the Median.
pred <- forecast$yhat[1:1980]
actual_traffic <- df[,2]
plot(actual_traffic, pred )
plot(sales_df$Sales, pred )
pred <- forecast$yhat[1:1980]
actual_sales <- df[,5]
actual_sales <- df[,6]
actual_sales <- df[,5]
#actual_sales <- df[,5]
actual_sales <- df[sales_df$Sales]
#actual_sales <- df[,5]
actual_sales <- df[sales_df$Sales]
library(readxl)
Actual_Sales <- read_excel("Actual Sales.xlsx",
col_types = c("text", "text", "date",
"numeric", "numeric", "numeric"))
View(Actual_Sales)
qplot(Date,Sales, data = Actual_Sales)
ds <- Actual_Sales$Date
y <- Actual_Sales$Sales
df <- data.frame(ds,y)
m <- prophet(daily.seasonality="auto")
m <- fit.prophet(m,df)
?prophet
future <- make_future_dataframe(m, periods = 104)
forecast <- predict (m, future)
plot(m, forecast)
dyplot.prophet(m, forecast)
#export <- forecast$yhat
#export <- data.frame(export)
#write.csv(export, "no_regressors_traffic.csv")
dyplot.prophet(m, forecast)
prophet_plot_components(m, forecast)
pred <- forecast$yhat[1:1980]
actual_sales <- df[,5]
attach(Actual_Sales)
actual_sales <- df[,5]
actual_sales <- df[Actual_Sales,5]
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred )
pred <- forecast$yhat[1:1981]
actual_sales <- df[Actual_Sales,5]
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred )
abline(lm(pred~actual_sales))
#summary(pred~actual_sales) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_sales) # <- we are looking at the Adjusted R^2 and the Median.
summary(model1)
View(future)
View(forecast)
actual_sales <- Actual_Sales[,5]
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred )
pred <- forecast$yhat[1:1981]
actual_sales <- Actual_Sales[,5]
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred )
abline(lm(pred~actual_sales))
#summary(pred~actual_sales) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_sales) # <- we are looking at the Adjusted R^2 and the Median.
summary(model1)
pred <- forecast$yhat[1:1980]
actual_sales <- Actual_Sales[,5]
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred )
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
abline(lm(pred~actual_sales))
pred <- forecast$yhat[1:1980]
actual_sales <- Actual_Sales[,5]
#actual_sales <- df[sales_df$Sales]
plot(actual_sale, pred)
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
glimpse(Actual_Sales)
glimpse(forecast)
plot (Actual_Sales$Sales, forecast$yhat)
View(forecast)
plot (Actual_Sales$Sales, forecast$yhat[1:1980])
pred <- forecast$yhat[1:1980]
actual_sales <- Actual_Sales[,5]
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
pred <- forecast$yhat[1:1980]
actual_sales <- Actual_Sales[,5]
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
#summary(pred~actual_sales) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_sales) # <- we are looking at the Adjusted R^2 and the Median.
plot (Actual_Sales$Sales, forecast$yhat[1:1980])
pred <- forecast$yhat[1:1980]
actual_sales <- Actual_Sales[,5]
View(Actual_Sales)
View(forecast)
View(df)
pred <- forecast$yhat[1:1980]
actual_sales <- df[,2]
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
abline(lm(pred ~ actual_sales))
abline(lm(pred~actual_sales))
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
library(readxl)
ga_sales <- read_excel("GA_Sales_Data.xlsx",
col_types = c("date", "numeric"))
View(ga_sales)
library(readxl)
ga_sales <- read_excel("GA_Sales_Data.xlsx",
col_types = c("date", "numeric"))
View(ga_sales)
qplot(Date,Sales, data = ga_sales)
ds <- ga_sales$Date
y <- ga_sales$Sales
df <- data.frame(ds,y)
m <- prophet(daily.seasonality="auto")
m <- fit.prophet(m,df)
future <- make_future_dataframe(m, periods = 104)
forecast <- predict (m, future)
plot(m, forecast)
dyplot.prophet(m, forecast)
prophet_plot_components(m, forecast)
pred <- forecast$yhat[1:1687]
actual_sales <- df[,2]
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
abline(lm(pred~actual_sales))
abline(lm(pred~actual_sales))
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
pred <- forecast$yhat[1:1687]
View(forecast)
pred <- forecast$yhat[1:1687]
actual_sales <- df[,2]
#actual_sales <- df[sales_df$Sales]
plot(actual_sales, pred)
abline(lm(pred~actual_sales))
#summary(pred~actual_sales) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_sales) # <- we are looking at the Adjusted R^2 and the Median.
summary(model1)
abline(lm(pred ~ actual_sales))
lm(pred ~ actual_sales)
abline(lm(pred ~ actual_sales))
abline (lm(pred ~ actual_sales))
#summary(pred~actual_sales) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_sales) # <- we are looking at the Adjusted R^2 and the Median.
summary(model1)
m <- prophet(daily.seasonality="auto")
m <- add_country_holidays(m, country_name = 'US')
m <- fit.prophet(m,df)
future <- make_future_dataframe(m, periods = 104)
forecast <- predict (m, future)
plot(m, forecast)
dyplot.prophet(m, forecast)
prophet_plot_components(m, forecast)
pred <- forecast$yhat[1:1687]
actual_Avg_Order_Value <- df[,2]
plot(actual_Avg_Order_Value, pred )
abline(lm(pred~actual_Avg_Order_Value))
#summary(pred~actual_Avg_Order_Value) <- this didn't work and for this reason we have the line below
model2<-lm(pred ~ actual_Avg_Order_Value) # <- we are looking at the Adjusted R^2 and the Median.
summary(model2)
View(forecast)
library("ggalluvial")
library("plotrix")
library("emmeans")
library ("car")
library ("carData")
library("ggplot2")
library("lubridate")
library("skimr")
library("psych")
library("Hmisc")
library("corrplot")
library("naniar")
library("GGally")
library("rmarkdown")
library("dplyr")
library ("tidyr")
library("readxl")
library("broom") # tidying and augmenting model output
library ("car")
library ("carData")
library("emmeans")
library("readr")
library("caTools")
library("lmtest")
library("ResourceSelection")
library("sandwich")
library("tidyverse")
library("jtools") # summarizing regression output, effect_plot
library("margins") # marginal effects
library("ggfortify") # auto_plot function
library("slider")
library("skimr")
library("prophet")
qplot(Date,Sales, data = ga_sales)
ds <- ga_sales$Date
y <- ga_sales$Sales
df <- data.frame(ds,y)
View(ga_sales)
ds <- ga_sales$Date
y <- ga_sales$Sales
df <- data.frame(ds,y)
m <- prophet(daily.seasonality="auto")
m <- fit.prophet(m,df)
?prophet
future <- make_future_dataframe(m, periods = 104)
forecast <- predict (m, future)
View(ga_sales)
plot(m, forecast)
dyplot.prophet(m, forecast)
#export <- forecast$yhat
#export <- data.frame(export)
#write.csv(export, "no_regressors_traffic.csv")
dyplot.prophet(m, forecast)
library("prophet")
library(readr)
VGS <- read_csv("Video_Game_Sales.csv", col_types = cols(Rank = col_integer(),
Year = col_date(format = "%Y")))
View(VGS)
View(VGS)
rm.VGS
rm(VGS)
library(readr)
VGS <- read_csv("Video_Game_Sales.csv")
View(VGS)
sales < - VGS
sales< - VGS
head(vgs)
head.vgs
head(VGS)
library("tidyverse")
install.packages(lubridate)
library(lubridate)
VGS %>%
mutate(
year = as.Date(as.character(yrs), format = "%Y")
) %>%
{.} -> VGS
View(VGS)
View(VGS)
rm.VGS
rm(VGS)
library(readr)
Video_Game_Sales <- read_csv("Video_Game_Sales.csv",
col_types = cols(Year = col_date(format = "%Y")))
View(Video_Game_Sales)
rm(Video_Game_Sales)
library(readr)
Video_Game_Sales <- read_csv("Video_Game_Sales.csv",
col_types = cols(Rank = col_integer(),
Year = col_date(format = "%Y")))
View(Video_Game_Sales)
sales <- read_csv("Video_Game_Sales.csv",
col_types = cols(Year = col_date(format = "%Y")))
View(sales)
rm(Video_Game_Sales)
head(sales)
sales %>%
mutate(
year = format(Year,format = "%Y")
) %>%
{.} -> sales
head(sales)
sales %>%
mutate(
year = format(Year,format = "%Y")
) %>%
{.} -> sales.1
head(sales.1)
head(sales)
rm(sales)
sales.1 %>%
mutate(
year = format(Year,format = "%Y")
) %>%
{.} -> sales
head(sales)
rm(sales.1)
sales.1 %>%
mutate(
year = format(Year,format = "%Y")
) %>%
{.} -> sales
sales %>%
mutate(
year = format(Year,format = "%Y")
) %>%
{.} -> sales
head(sales)
sales %>%
select(-Year) %>%
mutate(
year = format(Year,format = "%Y")
) %>%
{.} -> sales
sales %>%
mutate(
year = format(Year,format = "%Y")
) %>%
select(-Year) %>%
{.} -> sales
head(sales)
```{r}
library("prophet")
qplot(year,NA_Sales, data = sales)
qplot(year,NA_Sales, data = sales)
y <- sales$NA_Sales
ds <- sales$year
y <- sales$NA_Sales
df <- data.frame(ds,y)
m <- prophet(daily.seasonality="auto")
m <- fit.prophet(m,df)
m <- prophet(daily.seasonality="auto")
m <- fit.prophet(m,df)
