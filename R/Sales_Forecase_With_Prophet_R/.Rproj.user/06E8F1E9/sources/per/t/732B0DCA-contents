

```{r}
library("ggalluvial")
library("plotrix")
library("emmeans")
library ("car")
library ("carData")
library("ggplot2")
library("lubridate")
library("skimr")
library("psych")
library("Hmisc")
library("corrplot")
library("naniar")
library("GGally")
library("rmarkdown")
library("dplyr")
library ("tidyr")
library("readxl")
library("broom") # tidying and augmenting model output
library ("car")
library ("carData")
library("emmeans")
library("readr")
library("caTools")
library("lmtest")
library("ResourceSelection")
library("sandwich")
library("tidyverse")
library("jtools") # summarizing regression output, effect_plot
library("margins") # marginal effects
library("ggfortify") # auto_plot function
library("slider")
library("skimr")
```

# Load the PROPHET Package
```{r}
library("prophet")
```

# Read CSV
```{r, message=FALSE, warning=FALSE}
data <- read_xlsx("Actual_Cost_Revenue_Traffic_CR_DATA.xlsx")
```

```{r}
glimpse(data)

summary(data)
```




```{r}
data$Date <- ymd(data$Date)
glimpse(data)
```



#PLOT
```{r}
qplot(Date,Avg_Order_Value, data = data)
```

#Data
```{r}
ds <- data$Date
y <- data$Avg_Order_Value
df <- data.frame(ds,y)
```

#Forecasting Mode
```{r}
m <- prophet(daily.seasonality="auto")
m <- fit.prophet(m,df)
?prophet
```

#Prediction
```{r}
future <- make_future_dataframe(m, periods = 216)
forecast <- predict (m, future)
```



#Plot forecast
```{r}
plot(m, forecast)
dyplot.prophet(m, forecast)
export <- forecast$yhat
export <- data.frame(export)
write.csv(export, "no_regressors_Avg_Order_Value.csv")
```


# Forecast Components
```{r}
prophet_plot_components(m, forecast)
```

#Model Performance (Adjusted R^2 = 0.4072  and the Median = -0.6)
```{r}
pred <- forecast$yhat[1:883]
actual_Avg_Order_Value <- df[,2]
plot(actual_Avg_Order_Value, pred )
abline(lm(pred~actual_Avg_Order_Value))
#summary(pred~actual_Avg_Order_Value) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_Avg_Order_Value) # <- we are looking at the Adjusted R^2 and the Median.
summary(model1)
```


--------
Add USA holidays as Regressor
-------


#Forecasting Mode
```{r}
m <- prophet(daily.seasonality="auto")
m <- add_country_holidays(m, country_name = 'US')
m <- fit.prophet(m,df)
```

#Prediction
```{r}
future <- make_future_dataframe(m, periods = 216)
forecast <- predict (m, future)
```



#Plot forecast
```{r}
plot(m, forecast)
dyplot.prophet(m, forecast)
export <- forecast$yhat
export <- data.frame(export)
write.csv(export, "US_Holidays_as_regressors_Avg_Order_Value.csv")
```


# Forecast Components
```{r}
prophet_plot_components(m, forecast)
```

#Model Performance (Adjusted R^2 = 0.4092 and the Median = -0.744)
```{r}
pred <- forecast$yhat[1:883]
actual_Avg_Order_Value <- df[,2]
plot(actual_Avg_Order_Value, pred )
abline(lm(pred~actual_Avg_Order_Value))
#summary(pred~actual_Avg_Order_Value) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_Avg_Order_Value) # <- we are looking at the Adjusted R^2 and the Median.
summary(model1)
```


--------
Add Total_Cost as a Regressor
-------

#Data
```{r}
ds <- data$Date
y <- data$Avg_Order_Value
df <- data.frame(ds,y)
df$Total_Cost <- data$Total_Cost
```

#Forecasting Mode
```{r}
m <- prophet(daily.seasonality="auto")
m <- add_country_holidays(m, country_name = 'US')
m <- add_regressor(m, 'Total_Cost')
m <- fit.prophet(m,df)
```

#Prediction - We need to include the future value of the Regressor 
```{r}
future <- make_future_dataframe(m, periods = 216)
Total_Cost <- data.frame(df$Total_Cost)
colnames(Total_Cost) <- 'Total_Cost'
FC_Total_Cost <- data.frame(read_xlsx("FC_Total_Cost.xlsx"))
colnames(FC_Total_Cost) <- 'Total_Cost'
future$Total_Cost <- rbind(Total_Cost, FC_Total_Cost) # The column names of the dataframes we bind need to be the same "Total Cost"
future <- as.matrix(future)
colnames(future) <- NULL
colnames(future) <- c('ds', 'Total_Cost')
str(future)
future <- data.frame(future)
future$Total_Cost <- as.numeric(future$Total_Cost)
future$ds  <- ymd(future$ds)
                
forecast <- predict (m, future)

```



#Plot forecast
```{r}
plot(m, forecast)
dyplot.prophet(m, forecast)
```


# Forecast Components
```{r}
prophet_plot_components(m, forecast)
```

#Model Performance (Adjusted R^2 = 0.3845 and the Median = 171.1)
```{r}
pred <- forecast$yhat[1:883]
actual_Avg_Order_Value <- df[,2]
plot(actual_Avg_Order_Value, pred )
abline(lm(pred~actual_Avg_Order_Value))
#summary(pred~actual_Avg_Order_Value) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_Avg_Order_Value) # <- we are looking at the Adjusted R^2 and the Median.
summary(model1)
```



-----
Add Revenue as a Regressor
----


#Data
```{r}
ds <- data$Date
y <- data$Avg_Order_Value
df <- data.frame(ds,y)
df$Revenue <- data$Revenue
```

#Forecasting Mode
```{r}
m <- prophet(daily.seasonality="auto")
m <- add_country_holidays(m, country_name = 'US')
m <- add_regressor(m, 'Revenue')
m <- fit.prophet(m,df)
?add_country_holidays
```

#Prediction - We need to include th
```{r}
future <- make_future_dataframe(m, periods = 216)

#Revenue
Revenue <- data.frame(df$Revenue)
colnames(Revenue) <- 'Revenue'
FC_Revenue <- data.frame(read_xlsx("FC_Revenue.xlsx"))
colnames(FC_Revenue) <- 'Revenue'
future$Revenue <- rbind(Revenue, FC_Revenue)



future <- as.matrix(future)
colnames(future) <- NULL
colnames(future) <- c('ds', 'Revenue')
str(future)
future <- data.frame(future)
future$Revenue <- as.numeric(future$Revenue)
future$ds  <- ymd(future$ds)




forecast <- predict (m, future)

```

```{r}
#export <- forecast$yhat
#export <- data.frame(export)
#write.csv(export, "Revenue_Total_Cost_As_regressors_Avg_Order_Value.csv")
#m$train.holiday.names
```




#Plot forecast
```{r}
plot(m, forecast)
dyplot.prophet(m, forecast)
```


# Forecast Components
```{r}
prophet_plot_components(m, forecast)
```

#Model Performance * US Holidays - > (Adjusted R^2 =  0.3953  and the Median = 0) 
```{r}
pred <- forecast$yhat[1:883]
actual_Avg_Order_Value <- df[,2]
plot(actual_Avg_Order_Value, pred )
abline(lm(pred~actual_Avg_Order_Value))
#summary(pred~actual_Avg_Order_Value) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_Avg_Order_Value) # <- we are looking at the Adjusted R^2 and the Median.
summary(model1)
```

-------
Add Total_Cost and Revenue as a Regressor
------

#Data
```{r}
ds <- data$Date
y <- data$Avg_Order_Value
df <- data.frame(ds,y)
df$Total_Cost <- data$Total_Cost
df$Revenue <- data$Revenue
```

#Forecasting Mode
```{r}
m <- prophet(daily.seasonality="auto")
m <- add_country_holidays(m, country_name = 'GB')
m <- add_regressor(m, 'Total_Cost')
m <- add_regressor(m, 'Revenue')
m <- fit.prophet(m,df)
?add_country_holidays
```

#Prediction - We need to include th
```{r}
future <- make_future_dataframe(m, periods = 216)

# Total_Cost
Total_Cost <- data.frame(df$Total_Cost)
colnames(Total_Cost) <- 'Total_Cost'
FC_Total_Cost <- data.frame(read_xlsx("FC_Total_Cost.xlsx"))
colnames(FC_Total_Cost) <- 'Total_Cost'
future$Total_Cost <- rbind(Total_Cost, FC_Total_Cost)

#Revenue
Revenue <- data.frame(df$Revenue)
colnames(Revenue) <- 'Revenue'
FC_Revenue <- data.frame(read_xlsx("FC_Revenue.xlsx"))
colnames(FC_Revenue) <- 'Revenue'
future$Revenue <- rbind(Revenue, FC_Revenue)



future <- as.matrix(future)
colnames(future) <- NULL
colnames(future) <- c('ds', 'Total_Cost', 'Revenue')
str(future)
future <- data.frame(future)
future$Total_Cost <- as.numeric(future$Total_Cost)
future$Revenue <- as.numeric(future$Revenue)
future$ds  <- ymd(future$ds)




forecast <- predict (m, future)

```

```{r}
export <- forecast$yhat
export <- data.frame(export)
write.csv(export, "Revenue_Total_Cost_As_regressors_Avg_Order_Value.csv")
```




#Plot forecast
```{r}
plot(m, forecast)
dyplot.prophet(m, forecast)
```


# Forecast Components
```{r}
prophet_plot_components(m, forecast)
```

#Model Performance * US Holidays - > (Adjusted R^2 =  0.4012  and the Median = 00)
```{r}
pred <- forecast$yhat[1:883]
actual_Avg_Order_Value <- df[,2]
plot(actual_Avg_Order_Value, pred )
abline(lm(pred~actual_Avg_Order_Value))
#summary(pred~actual_Avg_Order_Value) <- this didn't work and for this reason we have the line below
model1<-lm(pred ~ actual_Avg_Order_Value) # <- we are looking at the Adjusted R^2 and the Median.
summary(model1)
```


















